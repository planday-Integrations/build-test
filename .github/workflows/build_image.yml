name: build and push docker image

on:
  workflow_call:

    inputs:
      image_name:
        required: true
        type: string
      version: 
        type: string
        required: true
      dockerfile: 
        type: string
        required: true
      dockerargs:
        type: string
        description: "Additional build arguments for docker, provided as a multiline string"
        required: false
      environment:
        type: string
        required: false
    secrets: 
      azure_client_id: 
        required: true
      azure_tenant_id: 
        required: true
      azure_subscription_id: 
        required: true
      registry: 
        required: true
      mdu_pat:
        required: true

    outputs:
      image_name:
        description: "image-name"
        value: ${{ jobs.build-push-image.outputs.image_name }}
      image_version:
        description: "image-version"
        value: ${{ jobs.build-push-image.outputs.image_version }}

jobs:
  build-push-image:
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write # This is required for requesting the OIDC JWT
      contents: read  # This is required for actions/checkout
      packages: read

    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set-outputs.outputs.image_name }}
      image_version: ${{ steps.set-outputs.outputs.image_version }}
    steps:
      - uses: actions/checkout@v2      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker # defaults to "docker-containerized"      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.azure_client_id }}
          tenant-id: ${{ secrets.azure_tenant_id }}
          subscription-id: ${{ secrets.azure_subscription_id }}

      - name: Log in to Azure ACR
        run: az acr login -n ${{secrets.registry}}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: | 
            ${{ secrets.registry }}/${{inputs.image_name}}:${{inputs.version}}
            ${{ secrets.registry }}/${{inputs.image_name}}:latest
          file: ${{ inputs.dockerfile }}
          build-args: |
            NPM_TOKEN=${{ secrets.mdu_pat }}
            PKGPASSWORD=${{ secrets.GITHUB_TOKEN }}
            ${{inputs.dockerargs}}
      - name: Set Outputs
        id: set-outputs
        run: |
          echo "image_name=${{inputs.image_name}}" >> $GITHUB_OUTPUT
          echo "image_version=${{inputs.version}}" >> $GITHUB_OUTPUT


